// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: net.proto

package netsend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*TaskMessage_DeleteRequest
	Payload       isTaskMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskMessage) Reset() {
	*x = TaskMessage{}
	mi := &file_net_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskMessage) ProtoMessage() {}

func (x *TaskMessage) ProtoReflect() protoreflect.Message {
	mi := &file_net_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskMessage.ProtoReflect.Descriptor instead.
func (*TaskMessage) Descriptor() ([]byte, []int) {
	return file_net_proto_rawDescGZIP(), []int{0}
}

func (x *TaskMessage) GetPayload() isTaskMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TaskMessage) GetDeleteRequest() *DeleteTaskRequest {
	if x != nil {
		if x, ok := x.Payload.(*TaskMessage_DeleteRequest); ok {
			return x.DeleteRequest
		}
	}
	return nil
}

type isTaskMessage_Payload interface {
	isTaskMessage_Payload()
}

type TaskMessage_DeleteRequest struct {
	DeleteRequest *DeleteTaskRequest `protobuf:"bytes,1,opt,name=delete_request,json=deleteRequest,proto3,oneof"` // 其他请求类型可以添加
}

func (*TaskMessage_DeleteRequest) isTaskMessage_Payload() {}

type DeleteTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTaskRequest) Reset() {
	*x = DeleteTaskRequest{}
	mi := &file_net_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskRequest) ProtoMessage() {}

func (x *DeleteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_net_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return file_net_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type TaskNotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // 任务完成通知或其他信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskNotification) Reset() {
	*x = TaskNotification{}
	mi := &file_net_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskNotification) ProtoMessage() {}

func (x *TaskNotification) ProtoReflect() protoreflect.Message {
	mi := &file_net_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskNotification.ProtoReflect.Descriptor instead.
func (*TaskNotification) Descriptor() ([]byte, []int) {
	return file_net_proto_rawDescGZIP(), []int{2}
}

func (x *TaskNotification) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_net_proto protoreflect.FileDescriptor

const file_net_proto_rawDesc = "" +
	"\n" +
	"\tnet.proto\x12\anetsend\"]\n" +
	"\vTaskMessage\x12C\n" +
	"\x0edelete_request\x18\x01 \x01(\v2\x1a.netsend.DeleteTaskRequestH\x00R\rdeleteRequestB\t\n" +
	"\apayload\",\n" +
	"\x11DeleteTaskRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\",\n" +
	"\x10TaskNotification\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2N\n" +
	"\tMyService\x12A\n" +
	"\n" +
	"TaskStream\x12\x14.netsend.TaskMessage\x1a\x19.netsend.TaskNotification(\x010\x01B\vZ\t./netsendb\x06proto3"

var (
	file_net_proto_rawDescOnce sync.Once
	file_net_proto_rawDescData []byte
)

func file_net_proto_rawDescGZIP() []byte {
	file_net_proto_rawDescOnce.Do(func() {
		file_net_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_net_proto_rawDesc), len(file_net_proto_rawDesc)))
	})
	return file_net_proto_rawDescData
}

var file_net_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_net_proto_goTypes = []any{
	(*TaskMessage)(nil),       // 0: netsend.TaskMessage
	(*DeleteTaskRequest)(nil), // 1: netsend.DeleteTaskRequest
	(*TaskNotification)(nil),  // 2: netsend.TaskNotification
}
var file_net_proto_depIdxs = []int32{
	1, // 0: netsend.TaskMessage.delete_request:type_name -> netsend.DeleteTaskRequest
	0, // 1: netsend.MyService.TaskStream:input_type -> netsend.TaskMessage
	2, // 2: netsend.MyService.TaskStream:output_type -> netsend.TaskNotification
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_net_proto_init() }
func file_net_proto_init() {
	if File_net_proto != nil {
		return
	}
	file_net_proto_msgTypes[0].OneofWrappers = []any{
		(*TaskMessage_DeleteRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_net_proto_rawDesc), len(file_net_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_net_proto_goTypes,
		DependencyIndexes: file_net_proto_depIdxs,
		MessageInfos:      file_net_proto_msgTypes,
	}.Build()
	File_net_proto = out.File
	file_net_proto_goTypes = nil
	file_net_proto_depIdxs = nil
}
